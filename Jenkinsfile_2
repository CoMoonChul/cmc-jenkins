pipeline {
    agent any
    environment {
        DB_USERNAME = "root"
        DB_PASSWORD = "wovpu6-jibmog-tarmyN"
        DB_HOST = "stash-mysql.crqr5xnet4rs.ap-northeast-2.rds.amazonaws.com"
        DB_PORT = "3306"
        DB_NAME = "stashdb"
        AWS_REGION = 'ap-northeast-2'
        REPO_URL = 'https://github.com/Myunwoo/stash_backend.git'
        BRANCH_NAME = 'main'
        EC2_TARGET = 'ubuntu@172.31.14.93'
        APP_DIR = '/home/ubuntu/stash-backend'
        OAG_DIR = '/var/lib/jenkins/workspace/stash_backend_deploy/src/main/resources/openapi_stash'
        S3_BUCKET = 'stash-frontend-app'
    }
    stages {
        stage('Checkout Source') {
            steps {
                echo 'Checking out source code...'
                git branch: "${BRANCH_NAME}", url: "${REPO_URL}"
            }
        }
        stage('Build Application') {
            steps {
                echo 'Building Spring Boot application...'
                sh """
                ./gradlew clean build \
                -Dspring.datasource.url=jdbc:mysql://${DB_HOST}:${DB_PORT}/${DB_NAME} \
                -Dspring.datasource.username=${DB_USERNAME} \
                -Dspring.datasource.password=${DB_PASSWORD}
                """
            }
        }
        stage('Upload to S3') {
            steps {
                echo 'Uploading specific files and directories to S3...'
                sh """
                aws s3 cp ${OAG_DIR} s3://${S3_BUCKET} --recursive --region ${AWS_REGION}
                """
            }
        }
        stage('Deploy to EC2') {
            steps {
                echo 'Deploying to EC2...'
                withCredentials([sshUserPrivateKey(credentialsId: 'backend-deploy-ssh-key', keyFileVariable: 'SSH_KEY')]) {
                    sh '''
                    echo "Creating remote directory..."
                    ssh -o StrictHostKeyChecking=no -i $SSH_KEY ${EC2_TARGET} "mkdir -p ${APP_DIR}"

                    echo "Transferring build files..."
                    scp -o StrictHostKeyChecking=no -i $SSH_KEY build/libs/*.jar ${EC2_TARGET}:${APP_DIR}/app.jar

                    // echo "Restarting the application..."
                    // ssh -o StrictHostKeyChecking=no -i $SSH_KEY ${EC2_TARGET} "nohup java -jar nohup java -jar ${APP_DIR}/app.jar/stash-0.0.1-SNAPSHOT.jar > ${APP_DIR}/app.log 2>&1 &"

                    echo "Restarting the application..."
                    ssh -o StrictHostKeyChecking=no -i $SSH_KEY ${EC2_TARGET} "
                        pkill -f 'stash-0.0.1-SNAPSHOT.jar' || true
                        nohup java -jar ${APP_DIR}/app.jar/stash-0.0.1-SNAPSHOT.jar > ${APP_DIR}/app.log 2>&1 &
                    "
                    '''
                }
            }
        }
    }
    post {
        success {
            echo 'Pipeline completed successfully.'
        }
        failure {
            echo 'Pipeline failed. Please check the logs for more details.'
        }
    }
}